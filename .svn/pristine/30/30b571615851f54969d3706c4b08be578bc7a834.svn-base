app.controller('goodsController' ,function($scope,$controller,$location,goodsService,uploadService,itemcatService,typeTemplateService){
	$controller('baseController',{$scope:$scope});
	$scope.list=[];
	//读取列表数据绑定到表单中
	$scope.findAll=function(){
		goodsService.findAll().success(
			function(response){
				$scope.list=response;
			}			
		);
	}
	$scope.searchEntity={};//定义搜索对象 	
	//条件查询 
	$scope.search=function(page,rows){
		goodsService.search(page,rows,$scope.searchEntity).success(
			function(response){
				console.log(response);
					$scope.paginationConf.totalItems=response.total;//总记录数 
					$scope.list=response.rows;//给列表变量赋值 
			}		
		);				
	}
	//显示分类的名称
	$scope.status=["未申请","申请中","申请通过","已驳回"];
	$scope.itemCatList = [];
	$scope.findItemCatList = function(){
		itemcatService.findAll().success(function(response){
			for(var i = 0;i<response.length;i++){
				$scope.itemCatList[response[i].id]=response[i].name;
			}
		})
	}
	//定义初始数组
	$scope.entity = {goodsDesc:{itemImages:[],specificationItems:[]}};
	$scope.add=function(){
		goodsService.add($scope.entity).success(
				function(response){
					if(response.success){
						swal({    title: "添加成功！",    text: "2秒后自动关闭。",    timer: 2000,    showConfirmButton: false  });
						location.reload();
					}else{
						alert(response.message);
					}
				}
		)
	}
	//查询实体
	$scope.findOne = function(){
		var id = $location.search()['id'];//获取参数值
		if (id==null) {
			return ;
		}
		goodsService.findOne(id).success(function(response){
			$scope.entity = response;
			//富文本编译器
			editor.html($scope.entity.goodsDesc.introduction);
			//图片
			$scope.entity.goodsDesc.itemImages=JSON.parse($scope.entity.goodsDesc.itemImages);
			//扩展属性列表
			$scope.entity.goodsDesc.customAttributeItems=JSON.parse($scope.entity.goodsDesc.customAttributeItems);
			//规格
			$scope.entity.goodsDesc.specificationItems=JSON.parse($scope.entity.goodsDesc.specificationItems);
			//商品sku列表
			for (var i = 0; i < $scope.entity.itemList.length; i++) {
				$scope.entity.itemList[i].spec=JSON.parse($scope.entity.itemList[i].spec);
				
			}
		})
	}
	$scope.save=function(){
		//提取文本编辑器的值
		$scope.entity.goodsDesc.introduction=editor.html();
		var sericeObject = {};//服务层对象
		if ($scope.entity.goods.id!=null) {//如果有ID
			serviceObject = goodsService.update($scope.entity);//修改
		} else {
			serviceObject = goodsService.add($scope.entity);//增加
		}
		serviceObject.success(function(response){
			if (response.success) {
				$scope.entity={};
				editor.html('');
				swal({
					title:response.message,
					text:'保存成功!',
					timer:5000,
					type:'success'
				});
			} else {
				swal({
					title:response.message,
					text:'保存失败!',
					timer:5000,
					type:'error'
				});
			}
		})
	}
	//根据规格名称和选项名称返回是否被勾选
	$scope.checkAttributeValue=function(specName,optionName){
		var items = $scope.entity.goodsDesc.specificationItems;
		var object = $scope.searchObjectByKey(items,'attributeName',specName);
		if(object==null){
			return false;
		}else{
			if(object.attributeValue.indexof(optionName)>0){
				return true;
			}else{
				return false;
			}
		}
	}
	$scope.uploadFile=function(){	  
		uploadService.uploadFile().success(function(response) {        	
        	if(response.success){//如果上传成功，取出url
        		$scope.image_entity.url=response.message;//设置文件地址
        	}else{
        		alert(response.message);
        	}
        }).error(function() {           
        	     alert("上传发生错误");
        });        
    };
    //添加图片列表
    $scope.add_image_entity=function(){    	
        $scope.entity.goodsDesc.itemImages.push($scope.image_entity);
    }
    //列表中移除图片
    $scope.remove_image_entity=function(index){
    	    $scope.entity.goodsDesc.itemImages.splice(index,1);
    }
    //获取一级分类
    $scope.selectItemCat1List=function(){
    	itemcatService.findAllByParentId(0).success(function(response){
    		$scope.itemCat1List = response;
    	})
    }
    //获取二级分类 监控entity.goods.category1Id
    $scope.$watch("entity.goods.category1Id",function(newVal,oldVal){
    	itemcatService.findAllByParentId(newVal).success(function(response){
    		$scope.itemCat2List = response;
    	})
    })
    //获取三级分类 监控entity.goods.category2Id
    $scope.$watch("entity.goods.category2Id",function(newVal,oldVal){
    	itemcatService.findAllByParentId(newVal).success(function(response){
    		$scope.itemCat3List = response;
    	})
    })
    //三级分类选择后 读取末班ID
    $scope.$watch("entity.goods.category3Id",function(newVal,oldVal){
    	itemcatService.findOne(newVal).success(function(response){
    		$scope.entity.goods.typeTemplateId=response.typeId;
    	})
    })
    //获取品牌列表
    $scope.$watch("entity.goods.typeTemplateId",function(newVal,oldVal){
    	typeTemplateService.findOne(newVal).success(function(response){
    		//获取的结果 是一个对象 需要把品牌的列表取出来
    		$scope.typeTemplate = response;//获取类型模板
    		$scope.typeTemplate.brandIds = JSON.parse(response.brandIds);
    		if ($location.search()['id']==null) {
    			$scope.entity.goodsDesc.customAttributeItems = JSON.parse(response.customAttributeItems);
			}
    	})
    	//获取规格列表
    	typeTemplateService.findSpecList(newVal).success(function(response){
    		$scope.specList=response;
    	})
    })
    $scope.updateSpecAttribute=function($event,name,value){
		var object=$scope.searchObjectByKey($scope.entity.goodsDesc.specificationItems,'attributeName',name);
		if(object!=null){
			//判断选中还是没有选中
			if($event.target.checked){
				//判断是谁的
				//如果没有就加进去
				object.attributeValue.push(value);
			}else{
				//如果有就删了
				object.attributeValue.splice(object.attributeValue.indexOf(value),1);
				
				//如果选项都取消了,将记录删除
				if(object.attributeValue.length==0){
					$scope.entity.goodsDesc.specificationItems.splice(
							$scope.entity.goodsDesc.specificationItems.indexOf(object),1	
					);
				}
			}
		}else{
			$scope.entity.goodsDesc.specificationItems.push(
			  {"attributeName":name,"attributeValue":[value]});		
			
		}
	}
	//生成sku列表
	$scope.createItemList=function(){
		$scope.entity.itemList=[{spec:{},price:0,num:9999,status:'0',isDefault:'0'}];
		var items=$scope.entity.goodsDesc.specificationItems;
		for (var i = 0; i < items.length; i++) {
			$scope.entity.itemList=addColumn($scope.entity.itemList,items[i].attributeName,items[i].attributeValue);
		}
	}
	addColumn=function(list,columnName,columnValues){
		var newList=[];//新的集合
		for (var i = 0; i < list.length; i++) {
			var oldRow=list[i];
			for (var j = 0; j < columnValues.length; j++) {
				var newRow=JSON.parse(JSON.stringify(oldRow))//深克隆
				newRow.spec[columnName]=columnValues[j];
				newList.push(newRow);
			}
		}
		return newList;
	}
	
	
});